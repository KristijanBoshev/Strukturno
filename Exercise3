/*
Еден елемент од матрица ја дели матрицата на 4 квадранти (прикажани на сликата). 
Притоа самиот елемент кој ја дели матрицата припаѓа во четвртиот квадрант (-5 во примерот на сликата).
Од стандарден влез се внесува матрица со димензии NxM (1 <= N, M < 100). 
Потоа се внесуваат два броеви кои претставуваат индекси на еден елемент од матрицата.
Да се најдат сумите на секој од квадрантите и да се испечатат на стандарен излез.
Притоа се печати сумата за првиот квадрант, па за вториот, па третиот и на крај за четвртиот. 
Доколку не може да се креира квадрант, тогаш за сумата на тој квадрант треба да се испечати 0.
*/
#include <stdio.h>

int main() {

    int n, m;
    scanf("%d %d", &n, &m);
    int a[n][m];
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            scanf("%d", &a[i][j]);
        }
    }
    int x,y;
    int prv_kvadrant = 0;
    int vtor_kvadrant = 0;
    int tret_kvadrant = 0;
    int cevtrt_kvadrant = 0;
    scanf("%d %d", &x, &y);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            if (i < x && j >= y)
            {
                prv_kvadrant+=a[i][j];
            }
            else if (i < x && j < y)
            {
                vtor_kvadrant+=a[i][j];
            }
            else if (i >= x && j < y)
            {
                tret_kvadrant+=a[i][j];
            }
            else {
                cevtrt_kvadrant+=a[i][j];
            }
        }
    }
    printf("%d %d %d %d", prv_kvadrant, vtor_kvadrant, tret_kvadrant, cevtrt_kvadrant);

    return 0;
}
